{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This CloudFormation template describes the creation of the InnovateVA Jenkins server.  It will be brought up in the public subnet with a publicly addressable IP address. SSH access will be limited through the bastion.",

  "Parameters" : {

    "HostedZone" : {
      "Description" : "This is the hosted zone you will connect jenkins to",
      "Type" : "String",
      "Default" : "singlestonedemo.com"
    },

    "S3Bucket" : {
      "Description" : "This is the s3 bucket where your cfn templates are stored",
      "Type" : "String",
      "Default" : "singlestonedemo"
    },

    "InstanceType" : {
      "Description" : "Enter m3.medium, m3.large, or m3.xlarge.  Default is m3.large.",
      "Default" : "m3.medium",
      "Type" : "String",
      "AllowedValues" : [ "m3.medium","m3.large","m3.xlarge" ],
      "ConstraintDescription" : "Must be a valid EC2 instance type."
    },

    "IvaPublicSubnetId" : {
      "Description" : "This parameter will pull in the Public Subnet ID returned from vpc.template.",
      "Type" : "String"
    },

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type" : "String",
      "Default" : "innovate",
      "MinLength" : "1",
      "MaxLength" : "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },

    "SourceSecurityGroupOwnerId" : {
      "Description" : "This parameter identifies the AWS account number under which all resources live.",
      "Default" : "592342700041",
      "Type" : "String"
    },

    "VpcId" : {
      "Description" : "This parameter will pull in the VPC ID returned from vpc.template.",
      "Type" : "String"
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.micro"   : { "Arch" : "64" },
      "m1.small"   : { "Arch" : "64" },
      "m1.medium"  : { "Arch" : "64" },
      "m1.large"   : { "Arch" : "64" },
      "m1.xlarge"  : { "Arch" : "64" },
      "m2.xlarge"  : { "Arch" : "64" },
      "m2.2xlarge" : { "Arch" : "64" },
      "m2.4xlarge" : { "Arch" : "64" },
      "c1.medium"  : { "Arch" : "64" },
      "c1.xlarge"  : { "Arch" : "64" }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "64" : "ami-b66ed3de" }
    }
  },

  "Resources" : {
    "IvaJenkins" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "DisableApiTermination" : "FALSE",
        "ImageId" :  { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "Monitoring" : "true",
        "Tags" : [
          {
            "Key" : "Name",
            "Value" : "InnovateVA Jenkins Server"
          },
          {
            "Key" : "Description",
            "Value" : "Contains Jenkins running on port 8080."
          }
        ],
        "NetworkInterfaces" : [
          {
            "DeleteOnTermination" : "true",
            "Description" : "Primary network interface",
            "DeviceIndex" : 0,
            "SubnetId" : {
              "Ref" : "IvaPublicSubnetId"
            },
            "PrivateIpAddresses" : [
              {
                "PrivateIpAddress" : "10.8.1.21",
                "Primary" : "true"
              }
            ],
            "GroupSet" : [
              {
                "Ref" : "IvaJenkinsSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress" : "true"
          }
        ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "wget -O /tmp/hostname.sh           https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/chef/hostname.sh\n",
          "bash /tmp/hostname.sh\n",
          "hostname InnovateVaJenkins\n",

          "mkdir /var/log/newrelic\n",
          "mkdir -p /tmp/opt/chef\n",

          "wget -O /tmp/chef-client.rpm       https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/chef/chefdk-0.3.0-1.x86_64.rpm\n",
          "rpm -Uvh /tmp/chef-client.rpm\n",

          "wget -O /opt/chef/client.rb        https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/chef/jenkinsclient.rb\n",
          "wget -O /opt/chef/validator.pem    https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/chef/validator.pem\n",
          "wget -O /opt/chef/node.json        https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/chef/cinode.json\n",
          "export HOSTNAME=`/usr/bin/curl -s http://169.254.169.254/latest/meta-data/local-hostname`\n",

          "chef-client -c /opt/chef/client.rb\n",
          "touch /root/chef-complete"
        ]]}}
      }
    },

    "IvaJenkinsDNS" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "Comment" : "Sets hostname for IvaJenkins.",
        "HostedZoneName" : { "Fn::Join" : ["", [{ "Ref" : "HostedZone" }, "."]]},
        "Name" : { "Fn::Join" : ["", [ "jenkins", ".", { "Ref" : "HostedZone" }, "."]]},
        "ResourceRecords" : [
          { "Fn::GetAtt" : [ "IvaJenkins", "PublicIp" ] }
        ],
        "TTL" : "60",
        "Type" : "A"
      }
    },

    "IvaJenkinsSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Controls traffic to and from Jenkins server. Allows HTTP(S) traffic from restricted IPs.",
        "VpcId" : {
          "Ref" : "VpcId"
        },
        "SecurityGroupIngress" : [
          {
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "80",
            "ToPort" : "80",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "443",
            "ToPort" : "443",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "8080",
            "ToPort" : "8080",
            "CidrIp" : "0.0.0.0/0"
          }
        ],

        "SecurityGroupEgress" : [
          {
            "IpProtocol" : "tcp",
            "FromPort" : "25",
            "ToPort" : "25",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "80",
            "ToPort" : "80",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "443",
            "ToPort" : "443",
            "CidrIp" : "0.0.0.0/0"
          }
        ]
      }
    }
  },

  "Outputs" : {
    "InstanceId" : {
      "Description" : "This is the instance ID of the IVA Jenkins server.",
      "Value" : { "Ref" : "IvaJenkins" }
    },
    "PublicIp" : {
      "Description" : "This is the publicly addressable IP address assigned to the IVA Jenkins server. Route53 will need this to set DNS records.",
      "Value" : {
        "Fn::GetAtt": [ "IvaJenkins", "PublicIp" ]
      }
    }
  }
}
