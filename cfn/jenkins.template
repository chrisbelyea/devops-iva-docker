{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This CloudFormation template describes the creation of the InnovateVA Jenkins server.  It will be brought up in the public subnet with a publicly addressable IP address. SSH access will be limited through the bastion.",

"Parameters" : {
  
    "AvailabilityZone" : {
        "Description" : "This parameter defines the default availability zone for the Jenkins server.",
        "Type" : "String",
        "Default" : "us-east-1d"
    },

    "CustomCookbooksSourceUrl" : {
        "Description" : "This parameter defines the URL of the repository containing custom cookbooks.",
        "Type" : "String",
        "Default" : "https://github.com/p00veyhead/InnovateVA/tree/master/InnovateVA.git"
    },

    "DefaultInstanceProfileArn" : {
        "Description" : "This parameter is the Amazon Resource Name (ARN) of the default IAM instance profile for creating EC2 instances.",
        "Type" : "String",
        "Default" : "arn:aws:iam::592342700041:instance-profile/aws-opsworks-ec2-role"
    },

    "InstanceType" : {
        "Description" : "Enter m3.medium, m3.large, or m3.xlarge.  Default is m3.medium.",
        "Default" : "m3.medium",
        "Type" : "String",
        "AllowedValues" : [ "m3.medium","m3.large","m3.xlarge" ],
        "ConstraintDescription" : "Must be a valid EC2 instance type."
    },

    "IvaBastionSecurityGroupId" : {
        "Description" : "This parameter will pull in the Bastion Security Group ID returned from bastion.template.",
        "Type" : "String"
    },      

    "IvaPublicSubnetId" : {
        "Description" : "This parameter will pull in the Public Subnet ID returned from vpc.template.",
        "Type" : "String"
    },  

    "KeyName" : {
        "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
        "Type" : "String",
        "Default" : "aws",
        "MinLength" : "1",
        "MaxLength" : "255",
        "AllowedPattern" : "[\\x20-\\x7E]*",
        "ConstraintDescription" : "can contain only ASCII characters."
    },

    "ServiceRoleArn" : {
        "Description" : "This parameter defines the IAM Service Role for setting up OpsWorks infrastructure.",
        "Type" : "String",
        "Default" : "arn:aws:iam::592342700041:role/aws-opsworks-service-role"
    },

    "SourceSecurityGroupOwnerId" : {
        "Description" : "This parameter identifies the AWS account number under which all resources live.",
        "Default" : "592342700041",     
        "Type" : "String"
    },

    "VpcId" : {
        "Description" : "This parameter will pull in the VPC ID returned from vpc.template.",
        "Type" : "String"
    }    
  },

  "Resources" : {
    "IvaJenkinsStack" : {
      "Type" : "AWS::OpsWorks::Stack",
      "Properties" : {
        "DefaultOs" : "Amazon Linux",
        "DefaultSubnetId" : {
          "Ref" : "IvaPublicSubnetId"
        },
        "VpcId" : {
          "Ref" : "VpcId"
        },
        "Name" : {
          "Ref" : "AWS::StackName"
        },
        "ServiceRoleArn" : { 
          "Ref" : "ServiceRoleArn"
        },
        "DefaultInstanceProfileArn" : {
          "Ref" : "DefaultInstanceProfileArn"
        },
        "DefaultSshKeyName" : { 
          "Ref" : "KeyName" 
        },
        "ConfigurationManager" : {
          "Name" : "Chef",
          "Version" : "11.10"
        },
        "UseCustomCookbooks": "true",
          "CustomJson": {
          },
        "CustomCookbooksSource" : {
          "Type" : "git",
          "Url" : {
          "Ref" : "CustomCookbooksSourceUrl" 
          }
        }
      }
    },

    "IvaJenkinsLayer" : {
      "DependsOn" : [ "IvaJenkinsStack", "IvaJenkinsSecurityGroup" ],
      "Type" : "AWS::OpsWorks::Layer",
      "Properties" : {
        "CustomSecurityGroupIds" : [{
          "Ref" : "IvaJenkinsSecurityGroup"
        }],
        "StackId" : {
          "Ref" : "IvaJenkinsStack"
        },
        "Name" : "IVA Jenkins Server",
        "Type" : "java-app",
        "Shortname" : "jenkins",
        "EnableAutoHealing" : "true",
        "AutoAssignElasticIps" : "false",
        "AutoAssignPublicIps" : "true",
        "CustomRecipes" : {
          "Configure" : [ "jenkins::master" ]
        }
      }
    },

    "IvaJenkinsInstance" : {
      "DependsOn" : "IvaJenkinsLayer",
      "Type" : "AWS::OpsWorks::Instance",
      "Properties" : {
        "StackId" : {
          "Ref" : "IvaJenkinsStack"
        },
        "LayerIds" : [{
          "Ref" : "IvaJenkinsLayer"
        }],
        "InstallUpdatesOnBoot" : "true",
        "Os" : "Amazon Linux",
        "AvailabilityZone" : { 
          "Ref" : "AvailabilityZone" 
        },
        "InstanceType" : { 
          "Ref" : "InstanceType" 
        },
        "RootDeviceType" : "ebs",
        "Architecture" : "x86_64"
      }
    },

    "IvaJenkinsSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Controls traffic to and from Jenkins server. Allows HTTP(S) traffic from restricted IPs.",
        "VpcId" : {
          "Ref" : "VpcId"
        },
        "SecurityGroupIngress" : [        
          {
            "IpProtocol" : "tcp",
            "FromPort" : "80",
            "ToPort" : "80",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "443",
            "ToPort" : "443",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "8080",
            "ToPort" : "8080",
            "CidrIp" : "0.0.0.0/0"
          }          
       ],

        "SecurityGroupEgress" : [
          {
            "IpProtocol" : "tcp",
            "FromPort" : "25",
            "ToPort" : "25",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "80",
            "ToPort" : "80",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "443",
            "ToPort" : "443",
            "CidrIp" : "0.0.0.0/0"
          }
        ]
      }
    },

    "sshFromBastion" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : {
          "Ref" : "IvaJenkinsSecurityGroup"
        },
        "IpProtocol" : "tcp",
        "FromPort" : "22",
        "ToPort" : "22",
        "SourceSecurityGroupId" : { "Ref" : "IvaBastionSecurityGroupId" },
        "SourceSecurityGroupOwnerId" : { 
          "Ref" : "SourceSecurityGroupOwnerId"
          }
      }
    }
  },

  "Outputs" : {
    "InstanceId" : {
      "Description" : "This is the instance ID of the IVA Jenkins server.",
      "Value" : { 
        "Ref" : "IvaJenkinsInstance"
        }
    },
    "PublicIp" : {
      "Description" : "This is the publicly addressable IP address assigned to the IVA Jenkins server. Route53 will need this to set DNS records.",
      "Value" : {
        "Ref" : "IvaJenkinsInstance"
      }
    }
  }
}
